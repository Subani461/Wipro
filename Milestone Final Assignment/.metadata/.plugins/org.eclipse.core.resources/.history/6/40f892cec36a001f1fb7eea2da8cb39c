import org.openqa.selenium.WebDriver;

public class tc1_login {
    private WebDriver driver;

  
    public void tc1_login(String username, String password) {
        // Navigate to the login page
        driver.get("https://example.com/login");

        // Enter username and password
        driver.findElement(By.name("username")).sendKeys(username);
        driver.findElement(By.name("password")).sendKeys(password);

        // Click the login button
        driver.findElement(By.name("login")).click();

        // Handle login failure
        if (driver.getTitle().contains("Login Failed")) {
            System.out.println("Login failed due to incorrect credentials");
        }
    }
}


}


public Map<String, Integer> viewCartItems() {
    // Navigate to the cart page
    driver.get("https://example.com/cart");

    // Find all products in the cart
    List<WebElement> products = driver.findElements(By.xpath("//div[@class='cart-item']"));

    // Create a map to store product names and quantities
    Map<String, Integer> cartItems = new HashMap<>();

    // Iterate through each product and extract name and quantity
    for (WebElement product : products) {
        String productName = product.findElement(By.name("productName")).getText();
        int quantity = Integer.parseInt(product.findElement(By.name("quantity")).getText());
        cartItems.put(productName, quantity);
    }

    return cartItems;
}


public String placeOrderAndVerify(String shippingAddress) {
    // Navigate to the checkout page
    driver.get("https://example.com/checkout");

    // Enter shipping address
    driver.findElement(By.name("shippingAddress")).sendKeys(shippingAddress);

    // Click the place order button
    driver.findElement(By.name("placeOrder")).click();

    // Verify order confirmation
    if (driver.getTitle().contains("Order Confirmation")) {
        String orderId = driver.findElement(By.name("orderId")).getText();
        System.out.println("Order placed successfully with ID: " + orderId);
        return orderId;
    } else {
        System.out.println("Order placement failed");
        return null;
    }
}


public String trackOrderStatus(String orderId) {
    // Navigate to the order tracking page
    driver.get("https://example.com/track-order");

    // Enter order ID
    driver.findElement(By.name("orderId")).sendKeys(orderId);

    // Click the track button
    driver.findElement(By.name("track")).click();

    // Get the current order status
    String status = driver.findElement(By.name("status")).getText();
    System.out.println("Current order status: " + status);
    return status;
}

public void verifyOrderViaAPI(String orderId) {
    // Set API endpoint and headers
    String endpoint = "https://example.com/api/orders/" + orderId;
    Header header = new Header("Authorization", "Bearer YOUR_API_KEY");

    // Send GET request to retrieve order details
    Response response = RestAssured.given()
            .header(header)
            .get(endpoint);

    // Verify order details match UI
    if (response.getStatusCode() == 200) {
        JsonPath jsonPath = response.jsonPath();
        String productName = jsonPath.get("items[0].productName");
        int quantity = jsonPath.get("items[0].quantity");
        double totalAmount = jsonPath.get("totalAmount");

        // Compare with UI values
        Map<String, Integer> cartItems = viewCartItems();
        Assert.assertTrue(cartItems.containsKey(productName));
        Assert.assertEquals(cartItems.get(productName), quantity);

        // Get the total amount from the UI
        double uiTotalAmount = getTotalAmountFromUI();
        Assert.assertEquals(uiTotalAmount, totalAmount, 0.01);

        System.out.println("Order details verified successfully via API");
    } else {
        System.out.println("Failed to verify order details via API");
    }
}

// Helper method to get the total amount from the UI
private double getTotalAmountFromUI() {
    // Navigate to the order summary page
    driver.get("https://example.com/order-summary");

    // Get the total amount from the UI
    String totalAmountText = driver.findElement(By.name("totalAmount")).getText();
    return Double.parseDouble(totalAmountText.replace("$", ""));
}

public void cancelOrderViaAPI(String orderId) {
    // Set API endpoint and headers
    String endpoint = "https://example.com/api/orders/" + orderId;
    Header header = new Header("Authorization", "Bearer YOUR_API_KEY");

    // Send DELETE request to cancel the order
    Response response = RestAssured.given()
            .header(header)
            .delete(endpoint);

    // Verify order status is updated to "Cancelled"
    if (response.getStatusCode() == 200) {
        JsonPath jsonPath = response.jsonPath();
        String status = jsonPath.get("status");

        if (status.equals("Cancelled")) {
            System.out.println("Order cancelled successfully via API");
        } else {
            System.out.println("Failed to cancel order via API");
        }
    } else {
        System.out.println("Failed to cancel order via API");
    }
}
