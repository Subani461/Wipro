<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="10" passed="5" failed="0" skipped="5">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-09T11:42:31Z" name="Suite" finished-at="2024-08-09T11:43:20Z" duration-ms="48644">
    <groups>
    </groups>
    <test started-at="2024-08-09T11:42:31Z" name="Test1" finished-at="2024-08-09T11:42:46Z" duration-ms="14487">
      <class name="Title">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Title@2d7275fc]" started-at="2024-08-09T17:12:31Z" name="setUp" finished-at="2024-08-09T17:12:46Z" duration-ms="14460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="f()[pri:0, instance:Title@2d7275fc]" started-at="2024-08-09T17:12:46Z" name="f" finished-at="2024-08-09T17:12:46Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Title@2d7275fc]" started-at="2024-08-09T17:12:46Z" name="getResult" finished-at="2024-08-09T17:12:46Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=ReportGenerator.f()[pri:0, instance:Title@2d7275fc] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null
	at ReportGenerator.getResult(ReportGenerator.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyTitle()[pri:0, instance:Title@2d7275fc]" started-at="2024-08-09T17:12:46Z" name="verifyTitle" finished-at="2024-08-09T17:12:46Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Title@2d7275fc]" started-at="2024-08-09T17:12:46Z" name="getResult" finished-at="2024-08-09T17:12:46Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Title@2d7275fc]" started-at="2024-08-09T17:12:46Z" name="afterClass" finished-at="2024-08-09T17:12:46Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Title -->
    </test> <!-- Test1 -->
    <test started-at="2024-08-09T11:42:46Z" name="Test2" finished-at="2024-08-09T11:42:54Z" duration-ms="7811">
      <class name="invalidCre">
        <test-method is-config="true" signature="setUp()[pri:0, instance:invalidCre@409bf450]" started-at="2024-08-09T17:12:46Z" name="setUp" finished-at="2024-08-09T17:12:54Z" duration-ms="7808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="f()[pri:0, instance:invalidCre@409bf450]" started-at="2024-08-09T17:12:54Z" name="f" finished-at="2024-08-09T17:12:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:invalidCre@409bf450]" started-at="2024-08-09T17:12:54Z" name="getResult" finished-at="2024-08-09T17:12:54Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=ReportGenerator.f()[pri:0, instance:invalidCre@409bf450] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null
	at ReportGenerator.getResult(ReportGenerator.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:invalidCre@409bf450]" started-at="2024-08-09T17:12:54Z" name="getResult" finished-at="2024-08-09T17:12:54Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="invalidCredentials()[pri:0, instance:invalidCre@409bf450]" started-at="2024-08-09T17:12:54Z" name="invalidCredentials" finished-at="2024-08-09T17:12:54Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentials -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:invalidCre@409bf450]" started-at="2024-08-09T17:12:54Z" name="afterClass" finished-at="2024-08-09T17:12:54Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- invalidCre -->
    </test> <!-- Test2 -->
    <test started-at="2024-08-09T11:42:54Z" name="Test3" finished-at="2024-08-09T11:43:02Z" duration-ms="8600">
      <class name="validCredentials">
        <test-method is-config="true" signature="setUp()[pri:0, instance:validCredentials@18078bef]" started-at="2024-08-09T17:12:54Z" name="setUp" finished-at="2024-08-09T17:13:02Z" duration-ms="8598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:validCredentials@18078bef]" started-at="2024-08-09T17:13:02Z" name="getResult" finished-at="2024-08-09T17:13:02Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=ReportGenerator.f()[pri:0, instance:validCredentials@18078bef] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null
	at ReportGenerator.getResult(ReportGenerator.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="f()[pri:0, instance:validCredentials@18078bef]" started-at="2024-08-09T17:13:02Z" name="f" finished-at="2024-08-09T17:13:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:validCredentials@18078bef]" started-at="2024-08-09T17:13:02Z" name="afterClass" finished-at="2024-08-09T17:13:02Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method signature="validCredent()[pri:0, instance:validCredentials@18078bef]" started-at="2024-08-09T17:13:02Z" name="validCredent" finished-at="2024-08-09T17:13:02Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCredent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:validCredentials@18078bef]" started-at="2024-08-09T17:13:02Z" name="getResult" finished-at="2024-08-09T17:13:02Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- validCredentials -->
    </test> <!-- Test3 -->
    <test started-at="2024-08-09T11:43:02Z" name="Test4" finished-at="2024-08-09T11:43:11Z" duration-ms="8853">
      <class name="passwordChange">
        <test-method is-config="true" signature="setUp()[pri:0, instance:passwordChange@4135c3b]" started-at="2024-08-09T17:13:02Z" name="setUp" finished-at="2024-08-09T17:13:11Z" duration-ms="8850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="f()[pri:0, instance:passwordChange@4135c3b]" started-at="2024-08-09T17:13:11Z" name="f" finished-at="2024-08-09T17:13:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="changePassword()[pri:0, instance:passwordChange@4135c3b]" started-at="2024-08-09T17:13:11Z" name="changePassword" finished-at="2024-08-09T17:13:11Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changePassword -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:passwordChange@4135c3b]" started-at="2024-08-09T17:13:11Z" name="getResult" finished-at="2024-08-09T17:13:11Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=ReportGenerator.f()[pri:0, instance:passwordChange@4135c3b] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null
	at ReportGenerator.getResult(ReportGenerator.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:passwordChange@4135c3b]" started-at="2024-08-09T17:13:11Z" name="getResult" finished-at="2024-08-09T17:13:11Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:passwordChange@4135c3b]" started-at="2024-08-09T17:13:11Z" name="afterClass" finished-at="2024-08-09T17:13:11Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- passwordChange -->
    </test> <!-- Test4 -->
    <test started-at="2024-08-09T11:43:11Z" name="Test5" finished-at="2024-08-09T11:43:20Z" duration-ms="8822">
      <class name="logout">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:12:31Z" name="beforeSuite" finished-at="2024-08-09T17:12:31Z" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:11Z" name="setUp" finished-at="2024-08-09T17:13:20Z" duration-ms="8813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="f()[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:20Z" name="f" finished-at="2024-08-09T17:13:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:20Z" name="getResult" finished-at="2024-08-09T17:13:20Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=ReportGenerator.f()[pri:0, instance:logout@128d2484] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.log(com.relevantcodes.extentreports.LogStatus, String)" because "ReportGenerator.test" is null
	at ReportGenerator.getResult(ReportGenerator.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="logOut()[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:20Z" name="logOut" finished-at="2024-08-09T17:13:20Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:20Z" name="getResult" finished-at="2024-08-09T17:13:20Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:20Z" name="afterClass" finished-at="2024-08-09T17:13:20Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:logout@128d2484]" started-at="2024-08-09T17:13:20Z" name="afterSuite" finished-at="2024-08-09T17:13:20Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- logout -->
    </test> <!-- Test5 -->
  </suite> <!-- Suite -->
</testng-results>
